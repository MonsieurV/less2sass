#!/usr/bin/env node

var program = require('commander');
var _ = require('lodash');
var path = require('path');
var fs = require('fs');
var less2sass = require('..');
var mkdir = require('mkdirp').sync;

/**
 * Helpers.
 */

function log(type, msg, color){
  color = color || '36';
  var w = 10;
  var len = Math.max(0, w - type.length);
  var pad = Array(len + 1).join(' ');
  console.log('  \033[' + color + 'm%s\033[m : \033[90m%s\033[m', pad + type, msg);
}

function warn(type, msg){
  log(type, msg, '33');
}

function write(path, str) {
  if (fs.existsSync(path)) {
    warn('exists', path);
  } else {
    log('create', path);
    fs.writeFileSync(path, str);
  }
}

/**
 * Usage.
 */

program
  .version(require('../package.json').version)
  .usage('<less file>');


/**
 * Examples.
 */

program.on('--help', function () {
  console.log('  Commands:');
  console.log();
  console.log('    less2sass <less file>       converts the less file to scss.\n');
  console.log();
});

/**
 * Parse.
 */

program.parse(process.argv);

// args void of file path

var args = process.argv.slice(3);

// command
if (program.args[0] === undefined) {
  console.log('You must provide a file path');

  program.help();
}

function readDir(filePath) {
  var fullPath = path.resolve(process.cwd(), filePath);
  var files = fs.readdirSync(fullPath);

  _.each(files, function(file){
    var fPath = path.join(fullPath, file);
    var stats = fs.statSync(fPath);

    // if its a less file convert it
    if (/\.less$/.test(file)) {
      var buffer = fs.readFileSync(fPath);
      var output = less2sass.convert(buffer.toString());
      var newPath = fPath.replace(/\.less$/, '.scss');

      write(newPath, output);
    }
    else if (stats.isDirectory()){
      readDir(fPath);
    }
  });
}

readDir(program.args[0]);